# Configuracion Paquetizado *Nesario a la hora de desplegar en Openshift*
quarkus.package.type=uber-jar
quarkus.http.port=8081

#Configuracion del formato de logs
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

#Configuracion de la variable de entorno utilizada para la solicitud rest to rest de la clase RestoRestGateway que define la url del servicio al que se va a llamar.
servicio.externo.url =http://localhost:8080/usuario/obtener

# Configuracion con Open Id Conect
# quarkus.oidc.auth-server-url => Especificar la URL del servidor de autenticación en un escenario de autenticación.
# quarkus.oidc.client-id => Especificar el identificador del cliente (client ID) en un escenario de autenticación.
# quarkus.oidc.credentials.secret => Especificar el secreto del cliente (client secret) en un escenario de autenticación.
# quarkus.oidc.application-type => Especificar el tipo de aplicación en un escenario de autenticación.
# quarkus.http.auth.permission.authenticated.paths => Especificar las rutas (paths) que requieren autenticación en una aplicación web.

# quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus
# quarkus.oidc.client-id=hello
# quarkus.oidc.credentials.secret=XZM1MgqVel1LqSxZlIbUfC4pGEfkT8Me

# quarkus.oidc.auth-server-url=${OPENSHIFT_SSO_REALM_URL}
# quarkus.oidc.client-id=${OPENSHIFT_SSO_CLIENT}
# quarkus.oidc.credentials.secret=${OPENSHIFT_SSO_SECRET}
# quarkus.oidc.application-type=web-app
# quarkus.http.auth.permission.authenticated.paths=/*
# quarkus.http.auth.permission.authenticated.policy=authenticated
# quarkus.oidc.token-state-manager.split-tokens=true


