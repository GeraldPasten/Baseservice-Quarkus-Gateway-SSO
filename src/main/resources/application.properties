# Configuracion Paquetizado *Nesario a la hora de desplegar en Openshift*
quarkus.package.type=uber-jar

#Configuracion del formato de logs
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

#Configuracion de la variable de entorno utilizada para la solicitud rest to rest de la clase RestoRestGateway que define la url del servicio al que se va a llamar.
# servicio.externo.url =http://localhost:8080/usuario/obtener
servicio.externo.url =${OPENSHIFT_SERVICIO_URL}
# Configuracion con Open Id Conect
# quarkus.oidc.auth-server-url => Especificar la URL del servidor de autenticación en un escenario de autenticación.
# quarkus.oidc.client-id => Especificar el identificador del cliente (client ID) en un escenario de autenticación.
# quarkus.oidc.credentials.secret => Especificar el secreto del cliente (client secret) en un escenario de autenticación.
# quarkus.oidc.application-type => Especificar el tipo de aplicación en un escenario de autenticación.
# quarkus.http.auth.permission.authenticated.paths => Especificar las rutas (paths) que requieren autenticación en una aplicación web.

# quarkus.oidc.auth-server-url=https://keycloak-sso-example.apps.cluster-h7psk.h7psk.sandbox2742.opentlc.com/auth/realms/front
# quarkus.oidc.client-id=gateway
# quarkus.oidc.credentials.secret=XZM1MgqVel1LqSxZlIbUfC4pGEfkT8Me

quarkus.oidc.auth-server-url=${OPENSHIFT_SSO_REALM_URL}
quarkus.oidc.client-id=${OPENSHIFT_SSO_CLIENT}
quarkus.oidc.credentials.secret=${OPENSHIFT_SSO_SECRET}
quarkus.oidc.application-type=service
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated
quarkus.oidc.token-state-manager.split-tokens=true

quarkus.http.cors=true
quarkus.http.cors.origins=*

cxf.hello.baseUri = http://localhost:9090
quarkus.cxf.client.hService.wsdl = ${cxf.hello.baseUri}/soap/HelloService?wsdl
quarkus.cxf.client.hService.client-endpoint-url = ${cxf.hello.baseUri}/soap/HelloService
quarkus.cxf.client.hService.service-interface = namespace.unknown.Hello
quarkus.cxf.codegen.wsdl2java.includes = wsdl/*.wsdl




